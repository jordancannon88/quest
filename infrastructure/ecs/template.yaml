# infrastructure/ecs/template.yaml

AWSTemplateFormatVersion: 2010-09-09

Description: "This template creates the ECS resources along with HTTPS Listener for the Application Load Balancer"

Parameters:
  ProjectName:
    Description: The projects call sign that will be prefixed to resource names
    Type: String

  TagCreatorParameter:
    Description: The email of the entity whom this project belongs to
    Type: String

  VPC:
    Description: Choose which VPC this ECS cluster should be deployed to
    Type: AWS::EC2::VPC::Id

  Subnets:
    Description: Choose which subnets the ECS service should be deployed to
    Type: List<AWS::EC2::Subnet::Id>

  SecurityGroup:
    Description: Select the Security Group to use for the ECS cluster hosts
    Type: AWS::EC2::SecurityGroup::Id

  LoadBalancer:
    Description: Select the Security Group to use for the ECS cluster hosts
    # Type: AWS::ElasticLoadBalancingV2::LoadBalancer::Arn
    Type: String

  SSLCert:
    Description: The ARN for the manually created SSL cert to be used for the Application Load Balancer
    Type: String

  Image:
    Description: The URI to the docker image to be used with the ECS Service
    Type: String

  Secret:
    Description: The secret word found in the webpage
    Type: String

Resources:
  ##
  ## ::Cluster
  ##
  Cluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: !Sub ${ProjectName}-ecs
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
        - CapacityProvider: FARGATE_SPOT
          Weight: 1
      Tags:
        - Key: created_by
          Value: !Ref TagCreatorParameter
        - Key: Name
          Value: !Sub ${ProjectName}-ecs

  ##
  ## ::Service
  ##
  Service:
    Type: AWS::ECS::Service
    Properties:
      TaskDefinition:
        Ref: TaskDefinition
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref SecurityGroup
          Subnets: !Ref Subnets
      LoadBalancers:
        - TargetGroupArn:
            Ref: TargetGroup
          ContainerPort: 3000
          ContainerName: quest-fargate-app
      Cluster:
        Ref: Cluster

  ##
  ## ::TaskDefinition
  ##
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Name: "quest-fargate-app"
          Image: !Ref Image
          Cpu: 256
          Environment:
            - Name: SECRET_WORD
              Value: !Ref Secret
          PortMappings:
            - ContainerPort: 3000
          # LogConfiguration:
          #   LogDriver: awslogs
          #   Options:
          #     awslogs-group: "/ecs/fargate-task-definition"
          #     awslogs-region: "us-east-1"
          #     awslogs-stream-prefix: "ecs"
          Memory: 512
          Essential: true
      NetworkMode: "awsvpc"
      ExecutionRoleArn:
        Fn::Join:
          - ""
          - - "arn:aws:iam:"
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - "role/ecsTaskExecutionRole"
      Family: "quest-fargate-app"
      Cpu: "256"
      Memory: "512"
      RequiresCompatibilities:
        - "FARGATE"

  ##
  ## ::TargetGroup
  ##
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VPC
      Port: 80
      Protocol: HTTP
      TargetType: ip
      Matcher:
        HttpCode: 200-299
      Name: !Sub ${ProjectName}-ecs
      HealthCheckIntervalSeconds: 40
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 20
      HealthyThresholdCount: 2
      Tags:
        - Key: created_by
          Value: !Ref TagCreatorParameter
        - Key: Name
          Value: !Sub ${ProjectName}-ecs

  ##
  ## ::Listener
  ##
  HTTPSlistener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: "HTTPS"
      Certificates:
        - CertificateArn: !Ref SSLCert
      DefaultActions:
        - Type: "forward"
          TargetGroupArn: !Ref TargetGroup
